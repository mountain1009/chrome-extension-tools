service: oyama-example
frameworkVersion: '3'

plugins:
  - serverless-esbuild
  # - serverless-layers
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-northeast-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - codecommit:*
            - codebuild:*
          Resource: "*"

functions:
  triggerFunction:
    handler: handler.codeCommitToCodeBuild
    events:
      - eventBridge:
          pattern:
            source:
              - aws.codecommit
            detail-type:
              - CodeCommit Repository State Change
            resources:
              - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:oyama-codecommit-to-codebuild-codecommit-dev
            detail:
              event:
                # 新規branch push
                - referenceCreated
                # 既存branch push
                - referenceUpdated
                # 全部動かす
                - pullRequestCreated
              # referenceType:
              #   - branch
              #   - pullRequest
              # referenceName:
              #   - prefix: "feature/"


custom:
  id: !Ref ApiGatewayRestApi
  esbuild:
    bundle: true
    minify: true
    concurrency: 10
    exclude: []
    sourcemap: true
    target: "node18"
    define: {}
    platform: "node"
  prune:
    automatic: true
    includeLayers: true
    number: 3
  # serverless-layers:
  #   compatibleRuntimes: ["nodejs18.x"]

resources:
  Resources:
    CodeBuildProjectTarget:
      Type: AWS::CodeBuild::Project
      Properties:
        Name: ${self:service}-codebuild
        Artifacts:
          Type: NO_ARTIFACTS
        Source:
          BuildSpec: !Sub buildspec-target.yaml
          Type: CODECOMMIT
          Location: https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/oyama-codecommit-to-codebuild-codecommit-dev
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:3.0
          PrivilegedMode: true
          Type: LINUX_CONTAINER
        ServiceRole: !GetAtt CodeBuildServiceRoleTarget.Arn
    CodeBuildServiceRoleTarget:
      Type: AWS::IAM::Role
      Properties:
        RoleName:
          !Sub ${self:service}-Target-CodeBuildServiceRole
        Policies:
          - PolicyName: !Sub ${self:service}-CodeBuild-ServiceRolePolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DeleteLogGroup
                    - logs:DescribeLogGroups
                  Resource:
                    - !Sub arn:aws:logs:ap-northeast-1:${AWS::AccountId}:log-group:/aws/codebuild/${self:service}-codebuild:*
                    - !Sub arn:aws:logs:ap-northeast-1:${AWS::AccountId}:log-group:/aws/lambda/*
                    - !Sub arn:aws:logs:ap-northeast-1:${AWS::AccountId}:log-group::log-stream:*
                  Effect: Allow
                - Action:
                    - codebuild:CreateProject
                  Resource:
                    - '*'
                  Effect: Allow
                - Action:
                    - s3:CreateBucket
                    - s3:DeleteBucket
                    - s3:PutBucket
                    - s3:GetObject
                    - s3:GetObjectVersion
                    - s3:GetBucketAcl
                    - s3:GetBucketLocation
                    - s3:PutObject
                    - s3:ListBucket
                    - s3:SetBucketEncryption
                    - s3:GetEncryptionConfiguration
                    - s3:PutEncryptionConfiguration
                    - s3:PutBucketPolicy
                  Resource:
                    - '*'
                  Effect: Allow
                - Action:
                    - cloudformation:*
                  Resource:
                    - '*'
                  Effect: Allow
                - Action:
                    - iam:CreateRole
                    - iam:DeleteRole
                    - iam:DeleteRolePolicy
                    - iam:PutRolePolicy
                    - iam:GetRole
                    - iam:PassRole
                  Resource:
                    - '*'
                  Effect: Allow
                - Action:
                    - lambda:*
                  Resource:
                    - "*"
                  Effect: Allow
                - Action:
                    - events:*
                  Resource:
                    - "*"
                  Effect: Allow
                - Action:
                    - codecommit:*
                  Resource:
                    - "*"
                  Effect: Allow
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: ''
              Effect: Allow
              Principal:
                Service: codebuild.amazonaws.com
              Action: sts:AssumeRole
    # LambdaTrigger:
    #   DependsOn: TriggerFunctionLambdaFunction
    #   Type: Custom::LambdaTrigger
    #   Properties:
    #     ServiceToken: !GetAtt TriggerFunctionLambdaFunction.Arn
    #     CodeCommitRepositoryName: oyama-codecommit-to-codebuild-codecommit-dev
    #     CodeCommitTriggerName: triggerFunction
    #     CodeCommitTriggerBranches:
    #       - feature/*
    #     LambdaArn: !GetAtt TriggerFunctionLambdaFunction.Arn
    # EventRule:
    #   DependsOn: TriggerFunctionLambdaFunction
    #   Type: AWS::Events::Rule
    #   Properties:
    #     EventPattern:
    #       source:
    #         - aws.codecommit
    #       detail-type:
    #         - CodeCommit Repository State Change
    #       resources:
    #         - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:oyama-codecommit-to-codebuild-codecommit-dev
    #       detail:
    #         event:
    #           - referenceCreated
    #           - referenceUpdated
    #           - referenceDeleted
    #           - referenceRestored
    #           - pullRequestCreated
    #           - pullRequestStatusChanged
    #           - pullRequestSourceBranchUpdated
    #           - pullRequestMerged
    #           - pullRequestCommentCreated
    #           - pullRequestCommentDeleted
    #           - pullRequestCommentUpdated
    #           - approvalRuleOverridden
    #           - approvalStateChanged
    #           - approvalRuleCreated
    #           - approvalRuleDeleted
    #           - approvalRuleUpdated
    #           - approvalStateChanged
    #           - commentOnCommitCreated
    #           - commentOnCommitUpdated
    #           - commentOnCommitDeleted
    #         referenceType:
    #           - branch
    #         referenceName:
    #           - prefix: "feature/"
    #     Targets:
    #       - Arn: !GetAtt TriggerFunctionLambdaFunction.Arn
    #         Id: TriggerFunctionLambdaFunction
            # RoleArn: !GetAtt EventRuleRole.Arn